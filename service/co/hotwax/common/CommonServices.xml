<?xml version="1.0" encoding="UTF-8"?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://moqui.org/xsd/service-definition-3.xsd">


    <service verb="login" noun="User">
        <in-parameters>
            <parameter name="username" required="true"/>
            <parameter name="password" required="true"/>
        </in-parameters>
        <out-parameters>
            <parameter name="token"/>
        </out-parameters>
        <actions>
            <set field="code" value="200" type="Integer"/>
            <script>
                try {
                    loggedIn = ec.user.loginUser(username, password)
                    //TODO: Avoid using api_key pattern , please refer following thread
                    //https://groups.google.com/forum/?utm_medium=email&amp;utm_source=footer#!msg/moqui/gQzEtMweM2E/ObEGLik_AAAJ
                    if (loggedIn) {
                        token = ec.user.getLoginKey()
                        return;
                    } else {
                        if (ec.message.hasError()) {
                            ec.logger.error("User login error : " + ec.message.getErrorsString())
                            ec.message.clearErrors()
                        }
                    }
                }   catch (Exception e) {
                    ec.logger.error("Error while generating token ", e)
                }
            </script>
            <return error="true" message="Sorry, your username and/or password are incorrect - please try again." />
        </actions>
    </service>
    <service verb="get" noun="UserProfile">
        <out-parameters>
            <parameter name="userId"/>
            <parameter name="username"/>
            <parameter name="userFullName"/>
            <parameter name="timeZone"/>
            <parameter name="locale"/>
            <parameter name="emailAddress"/>
            <parameter name="preferences" type="Map">
                <auto-parameters entity-name="moqui.security.UserPreference"/>
            </parameter>
        </out-parameters>
        <actions>
            <set field="userId" from="ec.user.UserAccount.userId"/>
            <set field="username" from="ec.user.UserAccount.username"/>
            <set field="userFullName" from="ec.user.UserAccount.userFullName"/>
            <set field="timeZone" from="ec.user.UserAccount.timeZone"/>
            <set field="locale" from="ec.user.UserAccount.locale"/>
            <set field="emailAddress" from="ec.user.UserAccount.emailAddress"/>
            <set field="preferences" from="ec.user.UserAccount.preferences"/>
        </actions>
    </service>
    <service verb="get" noun="AvailableTimeZones">
        <out-parameters>
            <parameter name="timeZones" type="List">
                <parameter name="timeZone" type="Map">
                    <parameter name="id"/>
                    <parameter name="label"/>
                    <parameter name="offset"/>
                </parameter>
            </parameter>
        </out-parameters>
        <actions>
            <script>
                timeZones = TimeZone.getAvailableIDs().collect { id ->
                    TimeZone tz = TimeZone.getTimeZone(id)
                        [
                            id: tz.ID,
                            label: tz.getDisplayName(tz.useDaylightTime(), TimeZone.LONG, ec.user.getLocale()),
                            offset: tz.rawOffset
                        ]
                    }.toSorted { a, b -> a.id &lt;=&gt; b.id }
            </script>
        </actions>
    </service>
</services>